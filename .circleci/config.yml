# CircleCI 2.0 configuration file. See <https://circleci.com/docs/2.0/language-python/>.
version: 2
jobs:
  build_python2:
    parallelism: 3  # Speed up the tests, while letting a container available for other builds.
    docker:
      - image: python:2.7.14

    steps:
      - checkout

      - restore_cache:
          key: v1-py2-{{ checksum "setup.py" }}

      - run:
          name: Create a virtualenv
          command: |
            mkdir -p /tmp/venv/openfisca_france
            virtualenv /tmp/venv/openfisca_france
            echo "source /tmp/venv/openfisca_france/bin/activate" >> $BASH_ENV

      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip twine wheel
            pip install --editable .[test] --upgrade
          #  pip install --editable git+https://github.com/openfisca/openfisca-core.git@BRANCH_NAME#egg=OpenFisca-Core  # use a specific branch of OpenFisca-Core

      - save_cache:
          key: v1-py2-{{ checksum "setup.py" }}
          paths:
            - /tmp/venv/openfisca_france

      - run:
          name: Lint YAML files
          command: |
            yamllint `circleci tests glob "**/*.{yaml,yml}" | circleci tests split`

      - run:
          name: Run tests
          command: |
            nosetests `circleci tests glob "tests/**/*.py" | circleci tests split`
            openfisca-run-test `circleci tests glob "tests/**/*.{yaml,yml}" | circleci tests split`

      - run:
          name: Run linting
          command: |
            make check-no-prints
            make check-syntax-errors

      - run:
          name: Check version number has been properly updated
          command: |
            git fetch
            .circleci/is-version-number-acceptable.sh

  deploy_python2:
    docker:
      - image: python:2.7.14
    environment:
      PYPI_USERNAME: openfisca-bot
      # PYPI_PASSWORD: this value is set in CircleCI's web interface; do not set it here, it is a secret!

    steps:
      - checkout

      - restore_cache:
          key: v1-py2-{{ checksum "setup.py" }}

      - run:
          name: Check for functional changes
          command: if ! .circleci/has-functional-changes.sh ; then circleci step halt ; fi

      - run:
          name: Upload a Python package to Pypi
          command: |
            source /tmp/venv/openfisca_france/bin/activate
            .circleci/publish-python-package.sh

      - run:
          name: Publish a git tag
          command: .circleci/publish-git-tag.sh

      - run:
          name: Deploy the Web API
          command: ssh -o StrictHostKeyChecking=no deploy-api@fr.openfisca.org

  build_python3:
    parallelism: 3  # Speed up the tests, while letting a container available for other builds.
    docker:
      - image: python:3.6

    steps:
      - checkout

      - restore_cache:
          key: v1-py3-{{ checksum "setup.py" }}

      - run:
          name: Create a virtualenv
          command: |
            mkdir -p /tmp/venv/openfisca_france
            python -m venv /tmp/venv/openfisca_france
            echo "source /tmp/venv/openfisca_france/bin/activate" >> $BASH_ENV

      - run:
          name: Install dependencies
          command: |
            pip install --upgrade pip twine wheel
            pip install --editable .[test] --upgrade
          #  pip install --editable git+https://github.com/openfisca/openfisca-core.git@BRANCH_NAME#egg=OpenFisca-Core  # use a specific branch of OpenFisca-Core

      - save_cache:
          key: v1-py3-{{ checksum "setup.py" }}
          paths:
            - /tmp/venv/openfisca_france

      - run:
          name: Lint YAML files
          command: |
            yamllint `circleci tests glob "**/*.{yaml,yml}" | circleci tests split`

      - run:
          name: Run tests
          command: |
            nosetests `circleci tests glob "tests/**/*.py" | circleci tests split`
            openfisca-run-test `circleci tests glob "tests/**/*.{yaml,yml}" | circleci tests split`

      - run:
          name: Run linting
          command: |
            make check-no-prints
            make check-syntax-errors
            make formatting

      - run:
          name: Check version number has been properly updated
          command: |
            git fetch
            .circleci/is-version-number-acceptable.sh

  deploy_python3:
    docker:
      - image: python:3.6
    environment:
      PYPI_USERNAME: openfisca-bot  # Edit this value to replace it by your Pypi username
      # PYPI_PASSWORD: this value is set in CircleCI's web interface; do not set it here, it is a secret!

    steps:
      - checkout

      - restore_cache:
          key: v1-py3-{{ checksum "setup.py" }}

      - run:
          name: Check for functional changes
          command: if ! .circleci/has-functional-changes.sh ; then circleci step halt ; fi

      - run:
          name: Upload a Python package to Pypi
          command: |
            source /tmp/venv/openfisca_france/bin/activate
            .circleci/publish-python-package.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_python2
      - build_python3
      - deploy_python2:
          requires:
            - build_python2
            - build_python3
          filters:
            branches:
              only: master
      - deploy_python3:
          requires:
            - build_python2
            - build_python3
          filters:
            branches:
              only: master
