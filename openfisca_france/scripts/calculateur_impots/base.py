# -*- coding: utf-8 -*-

"""Tools to use income taxes calculator from finances.gouv.fr web site."""


import urllib
import urllib2

from openfisca_france import FranceTaxBenefitSystem

__all__ = [
    'call_tax_calculator',
    'general_variable_name_by_tax_calculator_code',
    'household_income_variables_to_test',
    'individual_income_variables_to_test',
    'openfisca_variable_name_by_tax_calculator_code',
    'tax_benefit_system',
    'transform_scenario_to_tax_calculator_inputs',
    ]

tax_benefit_system = FranceTaxBenefitSystem()

openfisca_variable_name_by_tax_calculator_code = dict(
    ANNEE = u'year',
    AVFISCOPTER = None,
    BCSG = None,
    BPRS = None,
    BRDS = None,
    CIADCRE = None, #saldom2
    CICA = None,
    CICORSE = None,
    CICULTUR = None, #accult
    CIDEPENV = None, #quaenv
    CIDEVDUR = None, #quaenv
    CIGARD = u'ci_garext',
    CIGE = None,
    CIHABPRIN = u'inthab',
    CILOYIMP = u'assloy',
    CIMOBIL = None,
    CIPERT = None,
    CIPRETUD = u'preetu',
    CIRCM = None,
    CIRELANCE = None,
    CITEC = u'aidper',
    DIMMENAG = u'reduction_ss_condition_revenus',
    I2DH = None,
    IAVF2 = None,
    IAVIM = u'iai',
    IDEC = u'decote_gain_fiscal',
    IDRS2 = u'ir_plaf_qf',
    IINET = None,
    IINETIR = u'irpp',
    IPROP = None,
    IREST = None,
    IRESTIR = u'irpp',
    IRETS = None,
    ITRED = u'reductions',
    NAPCR = None,
    NAPCRP = None,
    NAPCS = None,
    NAPPS = None,
    NAPRD = None,
    NBP = u'nbptr',
    NBPT = u'nbptr',
    PERPPLAFTC = None,
    PERPPLAFTP = None,
    PERPPLAFTV = None,
    PPETOT = u'ppe',
    RAA = None,
    RAH = None,
    RAIDE = None, #saldom
    RCEL = None,
    RCEL2012 = None,
    RCELCOM = None,
    RCELFABC = None,
    RCELFD = None,
    RCELHJK = None,
    RCELHL = None,
    RCELHM = None,
    RCELHNO = None,
    RCELHR = None,
    RCELJBGL = None,
    RCELJOQR = None,
    RCELJP = None,
    RCELLIER = None,
    RCELNBGL = None,
    RCELNQ = None,
    RCELREPGJ = None,
    RCELREPGK = None,
    RCELREPGL = None,
    RCELREPGP = None,
    RCELREPGS = None,
    RCELREPGT = None,
    RCELREPGU = None,
    RCELREPGV = None,
    RCELREPGW = None,
    RCELREPGX = None,
    RCELREPHA = None,
    RCELREPHB = None,
    RCELREPHD = None,
    RCELREPHE = None,
    RCELREPHF = None,
    RCELREPHG = None,
    RCELREPHH = None,
    RCELREPHR = None,
    RCELREPHS = None,
    RCELREPHT = None,
    RCELREPHU = None,
    RCELREPHV = None,
    RCELREPHW = None,
    RCELREPHX = None,
    RCELREPHZ = None,
    RCELRRED09 = None,
    RCELRREDLA = None,
    RCELRREDLB = None,
    RCELRREDLC = None,
    RCELRREDLD = None,
    RCELRREDLE = None,
    RCELRREDLF = None,
    RCELRREDLM = None,
    RCELRREDLS = None,
    RCELRREDLZ = None,
    RCELRREDMG = None,
    RCINE = u'sofica',
    RCODELOP = None,
    RCODJT = None,
    RCODJU = None,
    RCODJV = None,
    RCODJW = None,
    RCODJX = None,
    RCOLENT = u'doment',
    RCOMP = u'adhcga',
    RCONS = None,
    RCOTFOR = None,
    RDIFAGRI = u'intagr',
    RDONS = None,
    RDUFLOGIH = None,
    REI = None,
    REVKIRE = u'rfr',
    RFCPI = None,
    RFIPC = None,
    RFOR = u'invfor',
    RFORET = u'deffor',
    RHEBE = u'daepad',
    RIDOMENT = None,
    RIDOMPROE1 = None,
    RIDOMPROE2 = None,
    RIDOMPROE3 = None,
    RIDOMPROE4 = None,
    RIDOMPROE5 = None,
    RILMIA = None,
    RILMIB = None,
    RILMIC = None,
    RILMIH = None,
    RILMIX = None,
    RILMIZ = None,
    RILMJI = None,
    RILMJS = None,
    RILMJV = None,
    RILMJW = None,
    RILMJX = None,
    RINNO = None, #spfcpi
    RINVDOMTOMLG = None,
    RINVRED = None,
    RLOCIDEFG = None,
    RLOGDOM = u'domlog',
    RMEUBLE = None,
    RNI = None,
    RNICOL = u'rni',
    RNOUV = u'cappme',
    RPATNAT = u'patnat',
    RPATNATOT = u'patnat',
    RPECHE = None,
    RPRESCOMPREP = None,
    RPROREP = None,
    RRBG = u'rbg',
    RRDOM = None,
    RREDMEUB = None,
    RREDREP = None,
    RREPA = u'donapd',
    RREPMEU = None,
    RREPNPRO = None,
    RRESIMEUB = None,
    RRESINEUV = None,
    RRESIVIEU = None,
    RRESTIMO = u'resimm',
    RRETU = u'ecpess',
    RRIRENOV = u'mohist',
    RRPRESCOMP = None,
    RSOCREPR = u'repsoc',
    RSOUFIP = None,
    RSURV = u'rsceha',
    RTELEIR = None,
    RTITPRISE = u'cappme',
    RTOUHOTR = None,
    RTOUR = None,
    RTOUREPA = None,
    RTOURES = None,
    RTOURHOT = None,
    RTOURNEUF = None,
    RTOURREP = None,
    RTOURTRA = None,
    TEFF = None,
    TOTPAC = u'nb_pac',
    TXMARJ = None,
    TXMOYIMP = None,
    )


general_variable_name_by_tax_calculator_code = {  
    'AVFISCOPTER': u'?',
    'BCSG': u'Base CSG',
    'BPRS': u'Base prélèvement social et contributions annexes',
    'BRDS': u'Base CRDS',
    'CIADCRE': u'Crédit d\'impôt pour dépenses au titre de services à la personne à domicile',
    'CICORSE': u'Crédit d\'impôt pour investissements en Corse',
    'CICORSEAVIS': u'Crédit d\'impôt pour investissements en Corse',
    'CICULTUR': u'Réduction/Crédit (?) d\'impôt pour acquisitions de biens culturels',
    'CIDEPENV': u'Crédit d\'impôt sur dépenses en faveur de la qualité environnementale des logements en location',
    'CIDEVDUR': u'Crédit d\'impôt sur dépenses en faveur de la qualité environnementale du logement principal',
    'CIFORET': u'Crédit d\'impôt pour investissements forestiers',
    'CIGARD': u'Crédit d\'impôt pour frais de garde d\'enfants',
    'CIGE': u'Crédit aides aux personnes',
    'CIHABPRIN': u'Crédit d\'impôt au titre des intérêts d\'emprunt pour acquisition de l\'habitation principale',
    'CILOYIMP': u'Crédit d\'impôt au titre des primes d\'assurances pour loyers impayés',
    'CIMOBIL': u'Rentes de source étrangère ouvrant droit à un crédit impôt égal à l\'impôt français',
    'CIPERT': u'?',#TODO (f3vv)
    'CIPRETUD': u'Crédit d\'impôt au titre des intérêts sur prêts étudiants',
    'CIRCM': u'?',
    'CIRELANCE': u'Crédit d\'impôt exceptionnel sur les revenus 2008',
    'CITEC': u'Crédit d\'impôt sur dépenses de prévention des risques technologiques dans les locations (ou aide à la personne)',
    'DIMMENAG': u'Réduction d\'impôt sous condition de revenus 2016',
    'I2DH': u'Prélèvement libératoire de 7,5%',
    'IAVF2': u'?',#TODO (f8th)
    'IAVIM': u'Impôt avant imputations',
    'IDEC': u'Décote',
    'IDRS2': u'Droits simples',
    'IINET': u'Montant net à payer',
    'IINETIR': u'Impôt sur le revenu net',
    'IPROP': u'Impôt proportionnel',
    'IREST': u'Montant net à restituer',
    'IRESTIR': u'Impôt sur le revenu net',
    'IRETS' : u'?',
    'ITRED': u'Total des réductions d\'impôt',
    'NAPCRP': u'Montant net des prélèvements sociaux (sur revenu du patrimoine et revenus d\'activité et de remplacement',
    'NAPCS': u'Montant net CSG',
    'NAPPS': u'Montant net prélèvement social et contributions annexes',
    'NAPRD': u'Montant net CRDS',
    'NBP': u'Nombre de parts',
    'NBPT': u'Nombre de parts',
    'PERPPLAFTC': u'?',#TODO (f2ch, f2dh, maries_ou_pacses)
    'PERPPLAFTV': u'Plafond de déduction pour les revenus 2014 au titre de l\'épargne retraite, pour déclarant 1',
    'PPETOT': u'Prime pour l\'emploi',
    'RAA': u'?',
    'RAH': u'?',
    'RAIDE': u'Réduction d\'impôt pour dépenses au titre de services à la personne à domicile',
    'RCEL': u'?',#TODO (scellier)
    'RCEL2012': u'?',#TODO (7ja)
    'RCELCOM': u'?',#TODO (7np)
    'RCELFABC': u'Réduction d\'impôt Scellier : cases 7FA, 7FB, 7FC',
    'RCELFD': u'Réduction d\'impôt Scellier : case 7FD',
    'RCELHJK': u'Réduction d\'impôt Scellier : case 7HJ, 7HK',
    'RCELHL': u'Réduction d\'impôt Scellier : case 7HL',
    'RCELHM': u'Réduction d\'impôt Scellier : case 7HM',
    'RCELHNO': u'Réduction d\'impôt Scellier : case 7HN, 7HO',
    'RCELHR': u'Réduction d\'impôt Scellier : case 7HR',
    'RCELHS': u'Réduction d\'impôt Scellier : case 7HS',
    'RCELJBGL': u'Réduction d\'impôt Scellier : case ?',
    'RCELJOQR': u'Réduction d\'impôt Scellier : case ?',
    'RCELJP': u'Réduction d\'impôt Scellier : case ?',
    'RCELLIER': u'Réduction d\'impôt Scellier : case ?',
    'RCELNBGL': u'Réduction d\'impôt Scellier : case ?',
    'RCELNQ': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGJ': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGK': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGL': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGP': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGS': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGT': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGU': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGV': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGV': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGW': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPGX': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHA': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHB': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHD': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHE': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHF': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHG': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHH': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHR': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHS': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHT': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHU': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHV': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHW': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHX': u'Réduction d\'impôt Scellier : case ?',
    'RCELREPHZ': u'Réduction d\'impôt Scellier : case ?',
    'RCELRRED09': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLA': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLB': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLC': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLD': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLE': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLF': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLM': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLS': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDLZ': u'Réduction d\'impôt Scellier : case ?',
    'RCELRREDMG': u'Réduction d\'impôt Scellier : case ?',
    'RCINE': u'Réduction d\'impôt pour souscription au capital d\'une SOFICA',
    'RCODELOP': u'?',
    'RCODJT': u'Réduction d\'impôt Censi-Bouvard : case 7JT',
    'RCODJTJU': u'Réduction d\'impôt Censi-Bouvard : case 7JT, 7JU',
    'RCODJU': u'Réduction d\'impôt Censi-Bouvard : case 7JU',
    'RCODJV': u'Réduction d\'impôt Censi-Bouvard : case ?',
    'RCODJW': u'Réduction d\'impôt Censi-Bouvard : case ?',
    'RCODJX': u'Réduction d\'impôt Censi-Bouvard : case ?',
    'RCOLENT': u'Réduction d\'impôt pour investissements Outre-Mer dans le cadre d\'une entreprise',
    'RCOMP': u'Réduction d\'impôt pour frais de comptabilité et d\'adhésion à un CGA',
    'RCOTFOR': u'Réduction d\'impôt pour investissements forestiers',
    'RDIFAGRI': u'Réduction d\'impôt pour paiement différé accordé aux agriculteurs',
    'RDONS': u'Réduction d\'impôt pour dons à des oeuvres d\'intérêt général',
    'RDUFLOGIH': u'Réduction d\'impôt Duflot : cases 7GH, 7GI',
    'RDUFREPFI': u'Réduction d\'impôt Duflot : case 7FI',
    'RDUFREPFK': u'Réduction d\'impôt Duflot : case 7FK',
    'RDUFREPFR': u'Réduction d\'impôt Duflot : case 7FR',
    'REI': u'Reprise de réductions ou de crédits d\'impôt : cases 8TF, 8TP',
    'REVKIRE': u'Revenu fiscal de référence',
    'RFCPI': u'?',
    'RFIPC': u'Réduction d\'impôt pour souscription au capital de FCPI en Corse',
    'RFOR': u'Réduction d\'impôt pour investissements forestiers (jusque 2013)',
    'RFORET': u'Réduction d\'impôt pour cotisations pour la défense des forêts contre l\'incendie',
    'RHEBE': u'Réduction d\'impôt pour dépenses d\'acceuil dans un établissement pour personnes dépendantes',
    'RIDOMENT': u'?',#TODO (7ur)
    'RIDOMPROE1': u'?',
    'RIDOMPROE2': u'?',#TODO (f7qz)
    'RIDOMPROE3': u'?',#TODO (f7qz)
    'RIDOMPROE4': u'?',#TODO (f7oz)
    'RIDOMPROE5': u'?',#TODO (f7oz)
    'RILMIA': u'Réduction d\'impôt Censi-Bouvard : case 7IA',
    'RILMIB': u'Réduction d\'impôt Censi-Bouvard : case 7IB',
    'RILMIC': u'Réduction d\'impôt Censi-Bouvard : case 7IC',
    'RILMIH': u'Réduction d\'impôt Censi-Bouvard : case 7IH',
    'RILMIX': u'Réduction d\'impôt Censi-Bouvard : case 7IX',
    'RILMIZ': u'Réduction d\'impôt Censi-Bouvard : case 7IZ',
    'RILMJI': u'Réduction d\'impôt Censi-Bouvard : case 7JI',
    'RILMJS': u'Réduction d\'impôt Censi-Bouvard : case 7JS',
    'RILMJV': u'Réduction d\'impôt Censi-Bouvard : case 7JV',
    'RILMJW': u'Réduction d\'impôt Censi-Bouvard : case 7JW',
    'RILMJX': u'Réduction d\'impôt Censi-Bouvard : case 7JX',
    'RINNO': u'Réduction d\'impôt pour souscription au capital de FCPI',
    'RINVDOMTOMLG': u'?',
    'RINVRED': u'Réduction d\'impôt Censi-Bouvard : case 7IT',
    'RLOCIDEFG': u'Réduction d\'impôt Censi-Bouvard : cases 7ID, 7IE, 7IF, 7IG',
    'RLOGDOM': u'Réduction d\'impôt pour investissements Outre-Mer dans le secteur du logement',
    'RMEUBLE': u'Réduction d\'impôt Censi-Bouvard : case 7IK',
    'RNI': u'?',
    'RNICOL': u'Revenu net imposable ou déficit à reporter',
    'RNOUV': u'Réduction d\'impôt pour souscription au capital de PME',
    'RPATNAT': u'Réduction d\'impôt pour dépenses de protection du patrimoine naturel',
    'RPATNATOT': u'Réduction d\'impôt pour dépenses de protection du patrimoine naturel',
    'RPRESCOMPREP': u'Prestation compensatoire : report de l\'année précédente : case 7wp',
    'RPROREP': u'?',#TODO (7is)
    'RRBG': u'Revenu brut global ou déficit',
    'RRDOM': u'?',#TODO (7ub)
    'RREDMEUB': u'?',#TODO (7is)
    'RREDREP': u'?',#TODO (7iu)
    'RREPA': u'Réduction d\'impôt pour dons à des organismes de personnes en difficultés',
    'RREPMEU': u'Réduction d\'impôt Censi-Bouvard : case 7IP',
    'RREPNPRO': u'Réduction d\'impôt Censi-Bouvard : case 7IQ',
    'RRESIMEUB': u'?',#TODO (7io)
    'RRESINEUV': u'?',#TODO (7ij)
    'RRESIVIEU': u'?',#TODO (7im, 7iw)
    'RRESTIMO': u'Réduction d\'impôt Malraux pour travaux de restauration immobilière',
    'RRETU': u'Réduction d\'impôt pour enfants à charge poursuivant leurs études',
    'RRIRENOV': u'Réduction d\'impôt pour travaux de conservation ou restauration de monuments historiques',
    'RRPRESCOMP': u'Prestation compensatoire',
    'RSOCREPR': u'Réduction d\'impôt au titre des intérêts d\'emprunt de reprise d\'une société',
    'RSOUFIP': u'Réduction d\'impôt pour souscription au capital de FIP',
    'RSURV': u'Réduction d\'impôt sur primes des contrats de rente-survie et épargne handicap',
    'RTELEIR': u'?',
    'RTITPRISE': u'Réduction d\'impôt pour souscription au capital de PME',
    'RTOUHOTR': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : résidence hôtelière',
    'RTOUR': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'RTOUREPA': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'RTOURES': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'RTOURHOT': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'RTOURNEUF': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'RTOURREP': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : reports (case 7XF à 7XN)',
    'RTOURTRA': u'Réduction d\'impôt pour investissements locatifs dans le secteur touristique : ',
    'TEFF': u'?',#TODO (ebnc_impo)
    'TOTPAC': u'Nombre de personnes à charge',
    'TXMARJ': u'Taux marginal d\'imposition',
    'TXMOYIMP': u'Taux moyen d\'imposition',
}

household_income_variables_to_test = [ # NB: taken from input variables of FELIN-ERFS Survey Scenario (TAXIPP) 2014
    # TODO : fix following errors
    # 'f2ab', 'f2bg', CREDIT D'IMPOT (2AB) > 80 EUROS SANS REVENU CORRESPONDANT
    # 'f2ck', CREDIT D'IMPOT 2CK > 80 E SANS REVENU CORRESPONDANT</UL> => mettre 2DC, 2TS ou 2TR
    # 'f7is', 'f7iu', 'f7ix', 'f7iy',
    # 'f3ve', 'f7fl', MONTANT LIGNE 3VE POUR UN CONTRIBUABLE NON DOMICILIE DANS UN DOM</UL>
    # 'f4bf', MONTANT PORTE LIGNE 4BF SANS REVENU OU DEFICIT FONCIER CORRESPONDANT
    # 'f7jy', f7jy must be < 16
    # 'f7ly', 'f7my', => number of conventions d'aides aux créateurs d'entreprises (not an income)
    # 'f7qh', 'f7qi', to test this => f7qi must be < f7qh
    # 'f7qr', 'f7qq', to test this => f7qr must be < f7qq
    # 'f7ri', 'f7rh', to test this => f7ri must be < f7rh
    # 'f7ro', 'f7rn', idem
    # 'f7rt', 'f7rs', idem
    # 'f7ry', 'f7rx', idem
    # 'f7sb', 'f7sa', LIGNE 7 SB, 7 SH, 7 SD, 7 SE, 7 SG SANS PRISE EN CHARGE DU CHIFFRE 7 SA
    # 'f7sh', 'f7sd', 'f7se', 'f7sg', to check
    # 'f7sj', 'f7sk', 'f7sl',
    # 'f7vg', CASE 7VG COCHEE SANS MONTANT LIGNE 7SH
    # 'f7wc', CASE 7WC COCHEE SANS MONTANT LIGNE 7SG<
    # 'f7wv', CASE 7WU 7WV COCHEE SANS MONTANT LIGNE 7SK ET RECIPROQUEMENT
    # 'f7ww', CASE 7WW 7WX COCHEE SANS MONTANT LIGNE 7SL ET RECIPROQUEMENT
    # 'f8ti', LA LIGNE 8TK EST REMPLIE SANS PRISE EN CHARGE DE 8XR, 8XP OU 8XQ
    # 'f8tk', LA LIGNE 8TK EST REMPLIE SANS PRISE EN CHARGE DE 8XR, 8XP OU 8XQ
    # cerdit quaenv : 'f7wh', CASE 7WH COCHEE SANS MONTANT LIGNE 7SD A 7ST
    # credit accult : 'f7uo', LA LIGNE 7UO EST REMPLIE SANS REVENU CORRESPONDANT
    # credit mecena : 'f7us', LA LIGNE 7US EST REMPLIE SANS REVENU CORRESPONDANT
    # credit quaenv : 'f7we', 'f7wg', CASE 7WE OU 7WG COCHEE SANS PRISE EN CHARGE LIGNES 7WH, 7WK, 7WF, 7WQ, 7WR
    # credit quaenv : 'f7wk', CASE 7WK COCHEE SANS MONTANT LIGNE 7SD A 7SW
    # prestation_compensatoire : 'f7wm', LE MONTANT 7WM EST INFERIEUR AU MONTANT 7WN
    # prestation_compensatoire : 'f7wn', 'f7wo', PRESENCE D UN MONTANT LIGNE 7WN SANS MONTANT 7WO OU RECIPROQUEMENT
    # reduc invfor : 'f7ut', CASE 7 UT COCHEE SANS PRISE EN CHARGE MONTANT LIGNE 7 UP
    'f1ar', 'f1br', 'f1cr', 'f1dr', 'f1er', 'f1aw', 'f1bw', 'f1cw', 'f1dw',
    'f2aa', 'f2al', 'f2am', 'f2an', 'f2aq', 'f2ar', 'f2dm',
    'f2ch', 'f2cg', 'f2dc', 'f2ts', 'f2ca', 'f2fu', 'f2go', 'f2gr', 'f2da', 'f2dh', 'f2ee', 'f2tr',
    'f3sa', 'f3sg', 'f3sh', 'f3sl', 'f3sm',
    'f3vg', 'f3vh', 'f3vm', 'f3vt', 'f3vc', 'f3vf', 'f3vi', 'f3vj', 'f3vz', 'f3vp', 'f3vy',
    'f4ba', 'f4bb', 'f4bc', 'f4bd', 'f4tq',
    'f5ga', 'f5gb', 'f5gc', 'f5gd', 'f5ge', 'f5gf', 'f5gg', 'f5gh', 'f5gi', 'f5gj',
    'f5ht', 'f5it', 'f5jt', 'f5kt', 'f5lt', 'f5mt', 
    'f5qf', 'f5qg', 'f5qn', 'f5qo', 'f5qp', 'f5qq',
    'f5rn', 'f5rn', 'f5rp', 'f5rq', 'f5rr', 'f5rw',
    'f7ah', 'f7tn', 'f7bc', 'f7vh', 'f7qb', 'f7ql', 'f7pi', 
    'f7rr', 'f7rq', 'f7rp', 'f7rw', 'f7rv', 'f7ru', 'f7rc', 'f7rb', 'f7ra', 'f7rg', 'f7rf', 'f7re', 'f7rd', 'f7rk', 'f7rj', 'f7rm', 'f7rl', 'f6fl', 'f6fb', 'f6fc', 'f6fa', 'f6fd', 'f6fe', 'f6ps', 'f7gx', 'f7gz', 'f7gt', 'f7gu', 'f7gv', 'f7gw', 'f7gp', 'f7gq', 'f7gs', 'f7gl', 'f7gn', 'f7gh', 'f7gi', 'f7gj', 'f7gk', 'f7ge', 'f7gf', 'f7gg', 'f7gc', 'f8tp', 'f8th', 'f8to', 'f8ta', 'f8tf', 'f8td', 'f7ng', 'f7nf', 'f7ne', 'f7nd', 'f7nc', 'f7nb', 'f7na', 'f7no', 'f7nn', 'f7nm', 'f7nl', 'f7nk', 'f7nj', 'f7ni', 'f7nh', 'f7nw', 'f7nv', 'f7nu', 'f7nt', 'f7ns', 'f7nr', 'f7nq', 'f7np', 'f7nz',  'f7uh', 'f7un', 'f7ul', 'f7uc', 'f7uf', 'f7uz', 'f7ux', 'f7uy', 'f7up', 'f7uq', 'f7uv', 'f7uw', 'f7uu', 'f7jk', 'f7jj', 'f7ji', 'f7jh', 'f7jo', 'f7jn', 'f7jm', 'f7jl', 'f7jc', 'f7jb', 'f7ja', 'f7jg', 'f7jf', 'f7je', 'f7jd', 'f7jx', 'f7js', 'f7jr', 'f7jq', 'f7jp', 'f7jw', 'f7jv', 'f7ju', 'f7jt', 'f7cc', 'f7cd', 'f7ce', 'f7cf', 'f7cl', 'f7cm', 'f7cn', 'f7cq', 'f7cu', 'f7xf', 'f7xi', 'f7xk', 'f7xj', 'f7xm', 'f7xo', 'f7xn', 'f7xq', 'f7xp', 'f7xs', 'f7xr', 'f7xu', 'f7xt', 'f7xw', 'f7xv', 'f7xy', 'f7xz', 'f6hj', 'f6hk', 'f6hl', 'f6hm', 'f7qx', 'f7qw', 'f7qu', 'f7qs', 'f7qj', 'f7qf', 'f7qg', 'f6gi', 'f6gh', 'f6gj', 'f6gu', 'f6gp', 'f7ma', 'f7mg', 'f7fq', 'f7fn', 'f7fm', 'f7fh', 'f7fd', 'f7fc', 'f7fb', 'f7fa', 'f7te', 'f7tg', 'f7th', 'f6dd', 'f6de', 'f6cb', 'f7iv', 'f7iw', 'f7it', 'f7ir', 'f7ip', 'f7iq', 'f7iz', 'f7if', 'f7ig', 'f7id', 'f7ie', 'f7ib', 'f7ic', 'f7ia', 'f7in', 'f7io', 'f7il', 'f7im', 'f7ij', 'f7ik', 'f7ih', 'f7py', 'f7wl', 'f7wj', 'f7wp', 'f7wr', 'f6eu', 'f6em', 'f6el', 'f7lm', 'f7li', 'f7le', 'f7ld', 'f7lg', 'f7lf', 'f7la', 'f7lc', 'f7lb', 'f7lz', 'f7ls', 'f7sp', 'f7sq', 'f7sr', 'f7ss', 'f7st', 'f7su', 'f7sv', 'f7sw', 'f7sx', 'f7sy', 'f7sz', 'f7sf',  'f7si', 'f7sm', 'f7sn', 'f7so', 'f7oa', 'f7ob', 'f7oc', 'f7ol', 'f7om', 'f7on', 'f7oo', 'f7oh', 'f7oi', 'f7oj', 'f7ok', 'f7ot', 'f7ou', 'f7ov', 'f7ow', 'f7op', 'f7oq', 'f7or', 'f7os', 'f7hs', 'f7hr', 'f7hu', 'f7ht', 'f7hw', 'f7hv', 'f7hx', 'f7hz', 'f7ha', 'f7hb', 'f7he', 'f7hd', 'f7hg', 'f7hf', 'f7hh', 'f7hk', 'f7hj', 'f7hm', 'f7hl', 'f7ho', 'f7hn', 'f7ac', 'f7vc', 'f7va', 'f7vz', 'f7vy', 'f7vx', 'f7vw', 'f7vv', 'f7vu', 'f7vt', 'f7kh', 'f7ki', 'f7ka', 'f7kb', 'f7kc', 'f7kd', 'f7ks', 'f7df', 'f7db',  
    'f7ui', 'f7pa', 'f7cy', 'f7dy', 'f7ey', 'f7yz', 'f7ym', 'f7lt',
    'f7wj', 'f7wl', 'f7wr', 'f7ga', 'f7gb', 'f7gc', 'f7ge', 'f7gf', 'f7gg', 'f7bm', 'f7cb',
    'f8ta', 'f8vl', 'f8vm',
]

individual_income_variables_to_test = [ # NB: taken from input variables of FELIN-ERFS Survey Scenario (TAXIPP) 2014
    # 'f1tv', 'f1tw', 'f1tx',  => individual incomes but not with this name.. TO CHECK
    # 'revimpres', "REVENUS A IMPOSER AUX CONTRIBUTIONS SOCIALES SANS REVENU CORRESPONDANT"
    #'f6ev', 'f6rs', 'f6ss', 
    #'ppe_tp_ns', # WARNING : DGFiP calculator does not like this one
    'aacc_defn',
    'aacc_defs',
    'aacc_exon',
    'aacc_gits',
    'aacc_impn', 
    'aacc_imps',
    'aacc_pvce', 
    'abic_defm', 
    'abic_defn', 
    'abic_defs',
    'abic_exon', 
    'abic_impm', 
    'abic_impn', 
    'abic_imps',
    'abic_pvce', 
    'abnc_defi', 
    'abnc_exon', 
    'abnc_impo', 
    'abnc_proc', 
    'abnc_pvce', 
    'alnp_defs',
    'alnp_imps', 
    'arag_defi', 
    'arag_exon', 
    'arag_impg', 
    'arag_pvce', 
    'cbnc_assc',  
    'chomage_imposable',
    'cncn_aimp', 
    'cncn_bene', 
    'cncn_defi',
    'cncn_exon', 
    'cncn_info', 
    'cncn_jcre', 
    'cncn_pvce', 
    'ebic_imps',
    'ebic_impv',
    'ebnc_impo',
    'f3vd', 'f3vl',
    'frag_exon', 
    'frag_fore', 
    'frag_impo', 
    'frag_pvce', 
    'frag_pvct', 
    'macc_exon', 
    'macc_imps', 
    'macc_impv', 
    'macc_mvct', 
    'macc_pvce', 
    'macc_pvct', 
    'mbic_exon', 
    'mbic_imps', 
    'mbic_impv', 
    'mbic_mvct', 
    'mbic_pvce', 
    'mbic_pvct', 
    'mbnc_exon', 
    'mbnc_impo', 
    'mbnc_mvct', 
    'mbnc_mvlt', 
    'mbnc_pvce', 
    'mbnc_pvct', 
    'mncn_exon', 
    'mncn_impo', 
    'mncn_mvct', 
    'mncn_pvce', 
    'mncn_pvct', 
    'nacc_defn', 
    'nacc_defs', 
    'nacc_exon', 
    'nacc_impn', 
    'nacc_meup',
    'nacc_pvce',
    'nbic_apch', 
    'nbic_defn', 
    'nbic_defs',
    'nbic_exon', 
    'nbic_impm', 
    'nbic_impn', 
    'nbic_imps',
    'nbic_mvct', 
    'nbic_pvce', 
    'nbnc_defi', 
    'nbnc_exon', 
    'nbnc_impo', 
    'nbnc_proc', 
    'nbnc_pvce', 
    'nrag_ajag', 
    'nrag_defi', 
    'nrag_exon', 
    'nrag_impg', 
    'nrag_pvce',
    'pensions_alimentaires_percues',
    'pensions_invalidite',
    'ppe_du_ns',
    'ppe_du_sa',
    'pveximpres',  
    'retraite_imposable',
    ]

start_date_by_name = {
    u'aacc_gits': '2011-01-01',
    u'aacc_imps': '2011-01-01',
    u'abic_defm': '2009-01-01',
    u'abic_impm': '2009-01-01',
    u'abnc_proc': '2009-01-01',
    u'alnp_defs': '2009-01-01',
    u'alnp_imps': '2009-01-01',
    u'arag_defi': '2007-01-01',
    u'arag_exon': '2007-01-01',
    u'arag_impg': '2007-01-01',
    u'arag_pvce': '2007-01-01',
    u'arag_sjag': '2011-01-01',
    u'cbnc_assc': '2006-01-01',
    u'cncn_adef': '2007-01-01',
    u'cncn_aimp': '2007-01-01',
    u'cncn_bene': '2006-01-01',
    u'cncn_defi': '2006-01-01',
    u'cncn_exon': '2008-01-01',
    u'cncn_info': '2009-01-01',
    u'cncn_jcre': '2006-01-01',
    u'cncn_pvce': '2006-01-01',
    u'ebic_imps': '2009-01-01',
    u'ebic_impv': '2009-01-01',
    u'ebnc_impo': '2009-01-01',
    u'elig_creimp_exc_2008': '2008-01-01',
    u'elig_creimp_jeunes': '2005-01-01',
    u'f2aa': '2007-01-01',
    u'f2al': '2008-01-01',
    u'f2am': '2009-01-01',
    u'f2an': '2010-01-01',
    u'f2aq': '2011-01-01',
    u'f2ar': '2012-01-01',
    u'f2bh': '2007-01-01',
    u'f2ck': '2013-01-01',
    u'f2da': '2008-01-01',
    u'f2dm': '2008-01-01',
    u'f2gr': '2005-01-01',
    u'f3sd': '2012-01-01',
    u'f3sf': '2012-01-01',
    u'f3si': '2012-01-01',
    u'f3va': '2006-01-01',
    u'f3vc': '2006-01-01',
    u'f3vd': '2008-01-01',
    u'f3vt': '2012-01-01',
    u'f3vv': '2013-01-01',
    u'f3vv_end_2010': '2010-01-01',
    u'f3vz': '2011-01-01',
    u'f5ga': '2010-01-01',
    u'f5gb': '2010-01-01',
    u'f5gc': '2010-01-01',
    u'f5gd': '2010-01-01',
    u'f5ge': '2010-01-01',
    u'f5gf': '2010-01-01',
    u'f5gg': '2010-01-01',
    u'f5gh': '2010-01-01',
    u'f5gi': '2010-01-01',
    u'f5gj': '2010-01-01',
    u'f5ht': '2007-01-01',
    u'f5it': '2007-01-01',
    u'f5jt': '2007-01-01',
    u'f5kt': '2007-01-01',
    u'f5lt': '2007-01-01',
    u'f5mt': '2007-01-01',
    u'f5qf': '2007-01-01',
    u'f5qg': '2007-01-01',
    u'f5qn': '2007-01-01',
    u'f5qo': '2007-01-01',
    u'f5qp': '2007-01-01',
    u'f5qq': '2007-01-01',
    u'f5rn': '2010-01-01',
    u'f6aa': '2005-01-01',
    u'f6cb': '2009-01-01',
    u'f6cc': '2005-01-01',
    u'f6da': '2005-01-01',
    u'f6eh': '2005-01-01',
    u'f6el': '2006-01-01',
    u'f6em': '2006-01-01',
    u'f6gu': '2006-01-01',
    u'f6hj': '2010-01-01',
    u'f6hk': '2011-01-01',
    u'f6hl': '2012-01-01',
    u'f6hm': '2013-01-01',
    u'f7ac': '2013-01-01',
    u'f7cc': '2013-01-01',
    u'f7cq': '2011-01-01',
    u'f7db': '2007-01-01',
    u'f7dq': '2009-01-01',
    u'f7fa': '2013-01-01',
    u'f7fb': '2013-01-01',
    u'f7fc': '2013-01-01',
    u'f7fd': '2013-01-01',
    u'f7fl': '2011-01-01',
    u'f7fm': '2007-01-01',
    u'f7fn': '2006-01-01',
    u'f7gh': '2013-01-01',
    u'f7gi': '2013-01-01',
    u'f7gj': '2013-01-01',
    u'f7gk': '2013-01-01',
    u'f7gl': '2013-01-01',
    u'f7gn': '2006-01-01',
    u'f7gp': '2013-01-01',
    u'f7gs': '2013-01-01',
    u'f7gt': '2013-01-01',
    u'f7gu': '2013-01-01',
    u'f7gv': '2013-01-01',
    u'f7gw': '2013-01-01',
    u'f7gx': '2013-01-01',
    u'f7gy': '2006-01-01',
    u'f7ha': '2012-01-01',
    u'f7hb': '2012-01-01',
    u'f7hd': '2012-01-01',
    u'f7he': '2012-01-01',
    u'f7hf': '2012-01-01',
    u'f7hg': '2012-01-01',
    u'f7hh': '2012-01-01',
    u'f7hj': '2009-01-01',
    u'f7hk': '2009-01-01',
    u'f7hl': '2010-01-01',
    u'f7hm': '2010-01-01',
    u'f7hn': '2010-01-01',
    u'f7ho': '2010-01-01',
    u'f7hr': '2010-01-01',
    u'f7hs': '2010-01-01',
    u'f7ht': '2011-01-01',
    u'f7hu': '2011-01-01',
    u'f7hv': '2011-01-01',
    u'f7hw': '2011-01-01',
    u'f7hx': '2011-01-01',
    u'f7hy': '2009-01-01',
    u'f7hz': '2011-01-01',
    u'f7ia': '2012-01-01',
    u'f7ib': '2012-01-01',
    u'f7ic': '2012-01-01',
    u'f7id': '2012-01-01',
    u'f7ie': '2012-01-01',
    u'f7if': '2012-01-01',
    u'f7ig': '2012-01-01',
    u'f7ih': '2012-01-01',
    u'f7ij': '2009-01-01',
    u'f7ik': '2010-01-01',
    u'f7il': '2010-01-01',
    u'f7im': '2010-01-01',
    u'f7in': '2011-01-01',
    u'f7io': '2011-01-01',
    u'f7ip': '2011-01-01',
    u'f7iq': '2011-01-01',
    u'f7ir': '2011-01-01',
    u'f7is': '2010-01-01',
    u'f7it': '2011-01-01',
    u'f7iu': '2011-01-01',
    u'f7iv': '2011-01-01',
    u'f7iw': '2011-01-01',
    u'f7ix': '2012-01-01',
    u'f7iy': '2013-01-01',
    u'f7iz': '2012-01-01',
    u'f7ja': '2012-01-01',
    u'f7jb': '2012-01-01',
    u'f7jc': '2013-01-01',
    u'f7jd': '2012-01-01',
    u'f7je': '2012-01-01',
    u'f7jf': '2012-01-01',
    u'f7jg': '2012-01-01',
    u'f7jh': '2012-01-01',
    u'f7ji': '2013-01-01',
    u'f7jj': '2012-01-01',
    u'f7jk': '2012-01-01',
    u'f7jl': '2012-01-01',
    u'f7jm': '2012-01-01',
    u'f7jn': '2012-01-01',
    u'f7jo': '2012-01-01',
    u'f7jp': '2012-01-01',
    u'f7jq': '2012-01-01',
    u'f7jr': '2012-01-01',
    u'f7js': '2013-01-01',
    u'f7jt': '2013-01-01',
    u'f7ju': '2013-01-01',
    u'f7jv': '2013-01-01',
    u'f7jw': '2013-01-01',
    u'f7jx': '2013-01-01',
    u'f7jy': '2013-01-01',
    u'f7ka': '2010-01-01',
    u'f7kb': '2011-01-01',
    u'f7kc': '2012-01-01',
    u'f7kd': '2013-01-01',
    u'f7kt': '2011-01-01',
    u'f7ku': '2011-01-01',
    u'f7ky': '2009-01-01',
    u'f7la': '2010-01-01',
    u'f7lb': '2011-01-01',
    u'f7lc': '2011-01-01',
    u'f7ld': '2012-01-01',
    u'f7le': '2012-01-01',
    u'f7lf': '2012-01-01',
    u'f7lg': '2010-01-01',
    u'f7li': '2011-01-01',
    u'f7lm': '2013-01-01',
    u'f7ls': '2013-01-01',
    u'f7ly': '2010-01-01',
    u'f7lz': '2013-01-01',
    u'f7ma': '2010-01-01',
    u'f7mb': '2011-01-01',
    u'f7mc': '2011-01-01',
    u'f7mg': '2013-01-01',
    u'f7mm': '2010-01-01',
    u'f7mn': '2011-01-01',
    u'f7my': '2010-01-01',
    u'f7na': '2011-01-01',
    u'f7nb': '2011-01-01',
    u'f7nc': '2011-01-01',
    u'f7nd': '2011-01-01',
    u'f7ne': '2011-01-01',
    u'f7nf': '2011-01-01',
    u'f7ng': '2011-01-01',
    u'f7nh': '2011-01-01',
    u'f7ni': '2011-01-01',
    u'f7nj': '2011-01-01',
    u'f7nk': '2011-01-01',
    u'f7nl': '2011-01-01',
    u'f7nm': '2011-01-01',
    u'f7nn': '2011-01-01',
    u'f7no': '2011-01-01',
    u'f7np': '2011-01-01',
    u'f7nq': '2011-01-01',
    u'f7nr': '2011-01-01',
    u'f7ns': '2011-01-01',
    u'f7nt': '2011-01-01',
    u'f7nu': '2012-01-01',
    u'f7nv': '2012-01-01',
    u'f7nw': '2012-01-01',
    u'f7nx': '2012-01-01',
    u'f7ny': '2012-01-01',
    u'f7nz': '2008-01-01',
    u'f7oa': '2011-01-01',
    u'f7ob': '2011-01-01',
    u'f7oc': '2011-01-01',
    u'f7oh': '2011-01-01',
    u'f7oi': '2011-01-01',
    u'f7oj': '2011-01-01',
    u'f7ok': '2011-01-01',
    u'f7ol': '2012-01-01',
    u'f7om': '2012-01-01',
    u'f7on': '2012-01-01',
    u'f7oo': '2012-01-01',
    u'f7op': '2012-01-01',
    u'f7oq': '2012-01-01',
    u'f7or': '2012-01-01',
    u'f7os': '2012-01-01',
    u'f7ot': '2012-01-01',
    u'f7ou': '2012-01-01',
    u'f7ov': '2012-01-01',
    u'f7ow': '2012-01-01',
    u'f7py': '2012-01-01',
    u'f7ra': '2009-01-01',
    u'f7rb': '2009-01-01',
    u'f7rc': '2011-01-01',
    u'f7rd': '2011-01-01',
    u'f7re': '2012-01-01',
    u'f7rf': '2012-01-01',
    u'f7rg': '2012-01-01',
    u'f7rh': '2012-01-01',
    u'f7ri': '2012-01-01',
    u'f7rj': '2012-01-01',
    u'f7rk': '2012-01-01',
    u'f7rl': '2012-01-01',
    u'f7rm': '2012-01-01',
    u'f7rn': '2012-01-01',
    u'f7ro': '2012-01-01',
    u'f7rp': '2012-01-01',
    u'f7rq': '2012-01-01',
    u'f7rr': '2012-01-01',
    u'f7rs': '2012-01-01',
    u'f7rt': '2012-01-01',
    u'f7ru': '2012-01-01',
    u'f7rv': '2012-01-01',
    u'f7rw': '2012-01-01',
    u'f7rx': '2012-01-01',
    u'f7ry': '2012-01-01',
    u'f7sb': '2009-01-01',
    u'f7sc': '2009-01-01',
    u'f7sd': '2009-01-01',
    u'f7se': '2009-01-01',
    u'f7sf': '2012-01-01',
    u'f7sg': '2012-01-01',
    u'f7sh': '2010-01-01',
    u'f7si': '2012-01-01',
    u'f7sj': '2012-01-01',
    u'f7sk': '2012-01-01',
    u'f7sl': '2012-01-01',
    u'f7sm': '2012-01-01',
    u'f7sn': '2012-01-01',
    u'f7so': '2012-01-01',
    u'f7sp': '2012-01-01',
    u'f7sq': '2012-01-01',
    u'f7sr': '2012-01-01',
    u'f7ss': '2012-01-01',
    u'f7st': '2012-01-01',
    u'f7su': '2012-01-01',
    u'f7sv': '2012-01-01',
    u'f7sw': '2012-01-01',
    u'f7sx': '2013-01-01',
    u'f7sy': '2013-01-01',
    u'f7sz': '2006-01-01',
    u'f7td': '2008-01-01',
    u'f7te': '2010-01-01',
    u'f7tf': '2011-01-01',
    u'f7tg': '2012-01-01',
    u'f7th': '2013-01-01',
    u'f7tt': '2012-01-01',
    u'f7tu': '2012-01-01',
    u'f7tv': '2012-01-01',
    u'f7tw': '2012-01-01',
    u'f7tx': '2012-01-01',
    u'f7ty': '2012-01-01',
    u'f7uh': '2007-01-01',
    u'f7uh_2007': '2007-01-01',
    u'f7ul': '2011-01-01',
    u'f7up': '2009-01-01',
    u'f7uq': '2009-01-01',
    u'f7ut': '2009-01-01',
    u'f7uu': '2010-01-01',
    u'f7uv': '2011-01-01',
    u'f7uw': '2012-01-01',
    u'f7ux': '2013-01-01',
    u'f7uy': '2013-01-01',
    u'f7uz': '2013-01-01',
    u'f7va': '2011-01-01',
    u'f7vc': '2011-01-01',
    u'f7ve': '2012-01-01',
    u'f7vf': '2012-01-01',
    u'f7vg': '2012-01-01',
    u'f7vo': '2006-01-01',
    u'f7vt': '2012-01-01',
    u'f7vu': '2011-01-01',
    u'f7vv': '2011-01-01',
    u'f7vw': '2010-01-01',
    u'f7vy': '2008-01-01',
    u'f7vz': '2008-01-01',
    u'f7wa': '2012-01-01',
    u'f7wb': '2012-01-01',
    u'f7wc': '2012-01-01',
    u'f7we': '2009-01-01',
    u'f7wg': '2012-01-01',
    u'f7wh': '2013-01-01',
    u'f7wk': '2009-01-01',
    u'f7wl': '2010-01-01',
    u'f7wq': '2010-01-01',
    u'f7wr': '2013-01-01',
    u'f7ws': '2012-01-01',
    u'f7wt': '2012-01-01',
    u'f7wu': '2012-01-01',
    u'f7wv': '2012-01-01',
    u'f7ww': '2012-01-01',
    u'f7wx': '2012-01-01',
    u'f7xa': '2011-01-01',
    u'f7xb': '2011-01-01',
    u'f7xd': '2009-01-01',
    u'f7xe': '2009-01-01',
    u'f7xi': '2010-01-01',
    u'f7xj': '2010-01-01',
    u'f7xk': '2010-01-01',
    u'f7xn': '2012-01-01',
    u'f7xo': '2008-01-01',
    u'f7xp': '2011-01-01',
    u'f7xq': '2011-01-01',
    u'f7xr': '2011-01-01',
    u'f7xu': '2006-01-01',
    u'f7xv': '2012-01-01',
    u'f7xw': '2007-01-01',
    u'f7xx': '2012-01-01',
    u'f7xy': '2008-01-01',
    u'f7xz': '2012-01-01',
    u'f8td': '2011-01-01',
    u'f8td_2002_2005': '2002-01-01',
    u'f8ts': '2012-01-01',
    u'f8uw': '2013-01-01',
    u'f8uy': '2009-01-01',
    u'f8wc': '2012-01-01',
    u'f8wd': '2006-01-01',
    u'f8we': '2008-01-01',
    u'f8wr': '2006-01-01',
    u'f8ws': '2006-01-01',
    u'f8wt': '2006-01-01',
    u'f8wu': '2006-01-01',
    u'f8wv': '2007-01-01',
    u'f8wx': '2007-01-01',
    u'fhod': '2013-01-01',
    u'fhoe': '2013-01-01',
    u'fhof': '2013-01-01',
    u'fhog': '2013-01-01',
    u'fhox': '2013-01-01',
    u'fhoy': '2013-01-01',
    u'fhoz': '2013-01-01',
    u'fhra': '2013-01-01',
    u'fhrb': '2013-01-01',
    u'fhrc': '2013-01-01',
    u'fhrd': '2013-01-01',
    u'fhsa': '2013-01-01',
    u'fhsb': '2013-01-01',
    u'fhsc': '2013-01-01',
    u'fhsd': '2013-01-01',
    u'fhse': '2013-01-01',
    u'fhsf': '2013-01-01',
    u'fhsg': '2013-01-01',
    u'fhsh': '2013-01-01',
    u'fhsi': '2013-01-01',
    u'fhsj': '2013-01-01',
    u'fhsk': '2013-01-01',
    u'fhsl': '2013-01-01',
    u'fhsm': '2013-01-01',
    u'fhsn': '2013-01-01',
    u'fhso': '2013-01-01',
    u'fhsp': '2013-01-01',
    u'fhsq': '2013-01-01',
    u'fhsr': '2013-01-01',
    u'fhss': '2013-01-01',
    u'fhst': '2013-01-01',
    u'fhsu': '2013-01-01',
    u'fhsv': '2013-01-01',
    u'fhsw': '2013-01-01',
    u'fhsx': '2013-01-01',
    u'fhsy': '2013-01-01',
    u'fhsz': '2013-01-01',
    u'fhta': '2013-01-01',
    u'fhtb': '2013-01-01',
    u'fhtc': '2013-01-01',
    u'fhtd': '2013-01-01',
    u'frag_exon': '2007-01-01',
    u'frag_fore': '2007-01-01',
    u'frag_impo': '2007-01-01',
    u'frag_pvce': '2007-01-01',
    u'frag_pvct': '2007-01-01',
    u'hsup': '2007-01-01',
    u'mbnc_mvct': '2012-01-01',
    u'mncn_exon': '2009-01-01',
    u'nacc_defs': '2012-01-01',
    u'nacc_meup': '2012-01-01',
    u'nacc_pvce': '2009-01-01',
    u'nbic_impm': '2009-01-01',
    u'nbic_mvct': '2012-01-01',
    u'nbic_pvce': '2008-01-01',
    u'nbnc_proc': '2009-01-01',
    u'nbnc_pvce': '2009-01-01',
    u'nlnp_defs': '2009-01-01',
    u'nrag_ajag': '2007-01-01',
    u'nrag_defi': '2007-01-01',
    u'nrag_exon': '2007-01-01',
    u'nrag_impg': '2007-01-01',
    u'pensions_invalidite': '2014-01-01',
    u'pveximpres': '2006-01-01',
    u'sal_pen_exo_etr': '2013-01-01'
    }

def call_tax_calculator(year, inputs):
    """
    Function that calls the DGFiP income tax simulator's webpage
    """
    url = 'https://www3.impots.gouv.fr/simulateur/cgi-bin/calc-{}.cgi'.format(year + 1)
    request = urllib2.Request(url, headers = {
        'User-Agent': 'OpenFisca-Script',
        })
    response = urllib2.urlopen(request, urllib.urlencode(inputs))
    response_html = response.read()
    if 'Erreur' in response_html:
        raise Exception(u"Erreur : {}".format(response_html.decode('iso-8859-1')).encode('utf-8'))
    return response_html


def transform_scenario_to_tax_calculator_inputs(scenario):
    tax_benefit_system = scenario.tax_benefit_system
    test_case = scenario.test_case
    impots_arguments = {
        'pre_situation_residence': 'M',  # Métropole
        }
    individu_by_id = {
        individu['id']: individu
        for individu in test_case['individus']
        }
    for foyer_fiscal in test_case['foyers_fiscaux']:
        foyer_fiscal = foyer_fiscal.copy()

        for declarant_index, declarant_id in enumerate(foyer_fiscal.pop('declarants')):
            declarant = individu_by_id[declarant_id].copy()

            date_naissance = declarant.pop('date_naissance')
            impots_arguments['0D{}'.format(chr(ord('A') + declarant_index))] = date_naissance.year

            statut_marital = declarant.pop('statut_marital', None)
            column = tax_benefit_system.variables['statut_marital']
            if statut_marital is None:
                statut_marital = column.enum._vars[column.default_value]
            pre_situation_famille = {
                u"Marié": 'M',
                u"Célibataire": 'C',
                u"Divorcé": 'D',
                u"Veuf": 'V',
                u"Pacsé": 'O',
                # u"Jeune veuf": TODO
                }[statut_marital if isinstance(statut_marital, basestring) else column.possible_values._vars[statut_marital]]
            assert 'pre_situation_famille' not in impots_arguments \
                or impots_arguments['pre_situation_famille'] == pre_situation_famille, str((impots_arguments,
                    pre_situation_famille))
            impots_arguments['pre_situation_famille'] = pre_situation_famille

            for column_code, value in declarant.iteritems():
                if column_code in (
                        'activite',
                        'cadre',
                        'id',
                        ):
                    continue
                column = tax_benefit_system.variables[column_code]
                cerfa_field = column.cerfa_field
                assert cerfa_field is not None and isinstance(cerfa_field, dict), column_code
                impots_arguments[cerfa_field[declarant_index]] = int(value) if isinstance(value, float) else value

        impots_arguments['0CF'] = len(foyer_fiscal['personnes_a_charge'])
        for personne_a_charge_index, personne_a_charge_id in enumerate(foyer_fiscal.pop('personnes_a_charge')):
            personne_a_charge = individu_by_id[personne_a_charge_id].copy()

            date_naissance = personne_a_charge.pop('date_naissance')
            impots_arguments['0F{}'.format(personne_a_charge_index)] = date_naissance.year

            personne_a_charge.pop('statut_marital', None)

            for column_code, value in personne_a_charge.iteritems():
                if column_code in (
                        'activite',
                        'cadre',
                        'id',
                        ):
                    continue
                column = tax_benefit_system.variables[column_code]
                cerfa_field = column.cerfa_field
                assert cerfa_field is not None and isinstance(cerfa_field, dict), column_code
                impots_arguments[cerfa_field[personne_a_charge_index]] = value
        
        
        for column_code, value in foyer_fiscal.iteritems():
            if column_code == 'id':
                continue
            if column_code == 'f7uf':
                impots_arguments['7UG'] = str(value)  # bug dans le site des impots
            if column_code == 'f7ud':
                impots_arguments['7UE'] = str(value)  # bug dans le site des impots
            if column_code == 'f7vc':
                impots_arguments['7VD'] = str(value)  # bug dans le site des impots
            if column_code == 'nbF':
                impots_arguments['0CF'] = int(value)
            if column_code == 'nbG':
                impots_arguments['0CG'] = int(value)
            if column_code == 'nbH':
                impots_arguments['0CH'] = int(value)
            if column_code == 'nbI':
                impots_arguments['0CI'] = int(value)
            if column_code == 'nbR':
                impots_arguments['0CR'] = int(value)
            if column_code == 'nbJ':
                impots_arguments['0DJ'] = int(value)
            if column_code == 'nbN':
                impots_arguments['0DN'] = int(value)
            if (column_code == 'caseF') & (value == 1):
                impots_arguments['0AF'] = '1'
            if (column_code == 'caseG') & (value == 1):
                impots_arguments['0AG'] = '1'
            if (column_code == 'caseL') & (value == 1):
                impots_arguments['0AL'] = '1'
            if (column_code == 'caseP') & (value == 1):
                impots_arguments['0AP'] = '1'
            if (column_code == 'caseS') & (value == 1):
                impots_arguments['0AS'] = '1'
            if (column_code == 'caseW') & (value == 1):
                impots_arguments['0AW'] = '1'
            if (column_code == 'caseT') & (value == 1):
                impots_arguments['0BT'] = '1'
            column = tax_benefit_system.variables[column_code]
            cerfa_field = column.cerfa_field
            assert cerfa_field is not None and isinstance(cerfa_field, basestring), column_code
            if ("nb" not in column_code) and ("case" not in column_code):
                impots_arguments[cerfa_field] = int(value) if isinstance(value, bool) else value

    return impots_arguments
